// Generated by dia2code
#ifndef STATE__ELEMENTTAB__H
#define STATE__ELEMENTTAB__H

#include <stdlib.h>
#include <vector>
#include <memory>

namespace state {
  class Element;
}

#include "Element.h"

namespace state {

  /// class ElementTab - 
  class ElementTab {
    // Associations
    state::Element Compose;
    // Attributes
  private:
    size_t width;
    size_t height;
    std::vector<std::unique_ptr<Element>> list;
    // Operations
  public:
    ElementTab (size_t width = 0, size_t height = 1);
    size_t const getWidth ();
    size_t const getHeight ();
    size_t add (Element* elem);
    void resize (size_t width, size_t height);
    Element* const get (int i, int j = 0);
    void set (int i, int j = 0, Element* elem);
    const Element& operator() (int i, int j = 0) const;
    // Setters and Getters
    const Element& getCompose() const;
    void setCompose(const Element& Compose);
  };

};

#endif
