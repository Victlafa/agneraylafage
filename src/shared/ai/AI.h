// Generated by dia2code
#ifndef AI__AI__H
#define AI__AI__H

#include <vector>
#include <memory>

namespace engine {
  class Engine;
  class Command;
}

#include "engine/Engine.h"
#include "engine/Command.h"

namespace ai {

  /// class AI - 
  class AI {
    // Attributes
  protected:
    std::vector<std::shared_ptr<engine::Command> > listCommands;
    // Operations
  public:
    AI ();
    virtual void run (engine::Engine& moteur) = 0;
    void initIA (engine::Engine& moteur);
    virtual std::vector<int> moveCellResearch (engine::Engine& moteur) = 0;
    virtual std::vector<int> adjacentEnnemyResearch (engine::Engine& moteur, int init_i, int init_j) = 0;
    std::vector<int> adjacentCellResearch (engine::Engine& moteur, int init_i, int init_j);
    std::vector<int> placeCellResearch (engine::Engine& moteur);
    std::vector<int> skyCellResearch (engine::Engine& moteur);
    std::vector<int> playerCellResearch (engine::Engine& moteur, int player);
    bool isAdjacent (int init_i, int init_j, int final_i, int final_j);
    std::vector<int> getAdjacences (int i, int j);
    // Setters and Getters
    const std::vector<std::shared_ptr<engine::Command> >& getListCommands() const;
    void setListCommands(const std::vector<std::shared_ptr<engine::Command> >& listCommands);
  };

};

#endif
