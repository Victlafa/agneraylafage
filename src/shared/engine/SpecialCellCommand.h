// Generated by dia2code
#ifndef ENGINE__SPECIALCELLCOMMAND__H
#define ENGINE__SPECIALCELLCOMMAND__H

#include <vector>
#include <stack>
#include <memory>

namespace engine {
  class Action;
};
namespace state {
  class State;
};
namespace engine {
  class Command;
}

#include "SpecialTypeID.h"
#include "Action.h"
#include "CommandTypeID.h"
#include "Command.h"

namespace engine {

  /// class SpecialCellCommand - 
  class SpecialCellCommand : public engine::Command {
    // Associations
    engine::SpecialTypeID* specialType;
    // Attributes
  protected:
    std::vector<int> init;
    std::vector<int> target;
    // Operations
  public:
    SpecialCellCommand (int init_i, int init_j, int target_i, int target_j, int player, SpecialTypeID type);
    void execute (std::stack<std::shared_ptr<Action>>& pile, state::State& state);
    CommandTypeID getTypeID () const;
    SpecialTypeID getSpecialTypeID () const;
    // Setters and Getters
    SpecialTypeID getSpecialType() const;
    void setSpecialType(SpecialTypeID specialType);
    const std::vector<int>& getInit() const;
    void setInit(const std::vector<int>& init);
    const std::vector<int>& getTarget() const;
    void setTarget(const std::vector<int>& target);
  };

};

#endif
