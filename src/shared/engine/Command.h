// Generated by dia2code
#ifndef ENGINE__COMMAND__H
#define ENGINE__COMMAND__H

#include <stack>
#include <memory>
#include <string>
#include <json/json.h>

namespace engine {
  class Action;
};
namespace state {
  class State;
};
namespace engine {
  class Command;
}

#include "CommandTypeID.h"
#include "Action.h"
#include "state/ID.h"
#include "state/State.h"

namespace engine {

  /// class Command - 
  class Command {
    // Attributes
  protected:
    int player;
    CommandTypeID type;
    // Operations
  public:
    virtual ~Command ();
    virtual void execute (std::stack<std::shared_ptr<Action>>& pile, state::State& state) = 0;
    CommandTypeID translateType (std::string typeString);
    virtual void serialize (Json::Value& out, int nTour) const = 0;
    static Command* deserialize (const Json::Value& in);
    // Setters and Getters
    int getPlayer() const;
    void setPlayer(int player);
    CommandTypeID getType() const;
    void setType(CommandTypeID type);
  };

};

#endif
