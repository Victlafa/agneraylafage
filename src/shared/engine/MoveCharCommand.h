// Generated by dia2code
#ifndef ENGINE__MOVECHARCOMMAND__H
#define ENGINE__MOVECHARCOMMAND__H

#include <vector>

namespace state {
  class State;
};
namespace engine {
  class Command;
  class FightCommand;
}

#include "CommandTypeID.h"
#include "Command.h"
#include "FightCommand.h"

namespace engine {

  /// class MoveCharCommand - 
  class MoveCharCommand : public engine::Command {
    // Associations
    engine::FightCommand fightCom;
    // Attributes
  protected:
    std::vector<int> creatures;
    int newI;
    int newJ;
    int player;
    // Operations
  public:
    MoveCharCommand (int i_crea, int j_crea, int newI, int newJ, int player);
    CommandTypeID getTypeID () const;
    void execute (state::State& state);
    bool isOccupied (state::State& state);
    // Setters and Getters
    const FightCommand& getFightCom() const;
    void setFightCom(const FightCommand& fightCom);
    const std::vector<int>& getCreatures() const;
    void setCreatures(const std::vector<int>& creatures);
    int getNewI() const;
    void setNewI(int newI);
    int getNewJ() const;
    void setNewJ(int newJ);
    int getPlayer() const;
    void setPlayer(int player);
  };

};

#endif
