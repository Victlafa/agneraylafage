// Generated by dia2code
#ifndef ENGINE__FIGHTCOMMAND__H
#define ENGINE__FIGHTCOMMAND__H

#include <vector>

namespace state {
  class State;
};
namespace engine {
  class Command;
}

#include "CommandTypeID.h"
#include "Command.h"

namespace engine {

  /// class FightCommand - 
  class FightCommand : public engine::Command {
    // Attributes
  protected:
    std::vector<int> creaPl1;
    std::vector<int> creaPl2;
    // Operations
  public:
    FightCommand (int i_crea1, int j_crea1, int i_crea2, int j_crea2);
    bool fightProcess (state::State& state);
    void gainConquest (state::State& state);
    CommandTypeID getTypeID () const;
    void execute (state::State& state);
    // Setters and Getters
    const std::vector<int>& getCreaPl1() const;
    void setCreaPl1(const std::vector<int>& creaPl1);
    const std::vector<int>& getCreaPl2() const;
    void setCreaPl2(const std::vector<int>& creaPl2);
  };

};

#endif
