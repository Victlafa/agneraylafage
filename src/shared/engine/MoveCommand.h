// Generated by dia2code
#ifndef ENGINE__MOVECOMMAND__H
#define ENGINE__MOVECOMMAND__H

#include <vector>
#include <stack>
#include <memory>
//#include <json/json.h>

namespace engine {
  class Action;
};
namespace state {
  class State;
};
namespace engine {
  class MoveCommand;
  class Command;
}

#include "CommandTypeID.h"
#include "Action.h"
#include "Command.h"

namespace engine {

  /// class MoveCommand - 
  class MoveCommand : public engine::Command {
    // Attributes
  protected:
    std::vector<int> initPos;
    std::vector<int> finalPos;
    // Operations
  public:
    MoveCommand (int init_i, int init_j, int final_i, int final_j, int player);
    CommandTypeID getTypeID () const;
    void execute (std::stack<std::shared_ptr<Action>>& pile, state::State& state);
    void serialize (Json::Value& out) const;
    MoveCommand* deserialize (const Json::Value& in);
    // Setters and Getters
    const std::vector<int>& getInitPos() const;
    void setInitPos(const std::vector<int>& initPos);
    const std::vector<int>& getFinalPos() const;
    void setFinalPos(const std::vector<int>& finalPos);
  };

};

#endif
